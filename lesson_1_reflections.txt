Q: How did viewing a diff between two versions of a file help you see the bug that was introduced?

A: Viewing the diff focused my attention on smaller bits of code that were easier to compare and contrast.

Q: How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I could learn to remove redundant code having learned better ways to implement features through iteration.

Q: What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

On the pros side you avoid having commits that are too small but you can have arbitrarily small ones too. On the cons side you may loose changes/data before you manually commit and you may also forget to commit regularly.

Q: Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because collections of files (repositories) are likely to be linked and require related changes in related files.

Q: How can you use the commands git log and git diff to view the history of files?

git log provides the list of all commits and their IDs, which can be pasted into git diff to see the changes. Earlier commits come below later ones in git log output.

Q: How might using version control make you more confident to make changes that could break something?

You can easily revert to earlier error-free versions and it is relatively easy to identify where the error was introduced.

Q: Now that you have your workspace set up, what do you want to try using Git for?

I will try using it to create my first project